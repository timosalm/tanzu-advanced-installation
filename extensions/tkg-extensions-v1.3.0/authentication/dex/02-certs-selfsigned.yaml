#@ load("values.star", "values")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:template", "template")
#@ load("globals.star", "globals")
#@ load("certificates.lib.yaml", "generate_dns_names", "get_certificate_with_params", "generate_self_signed_issuer", "certificate_generate_args")

#@ def dex_dns():
#@   if globals.infrastructure_provider == "aws":
#@     list = values.dns.aws.dnsNames
#@     list.append(values.dns.aws.DEX_SVC_LB_HOSTNAME)
#@     return list
#@   elif globals.infrastructure_provider == "azure":
#@     list = values.dns.azure.dnsNames
#@     list.append(values.dns.azure.DEX_SVC_LB_HOSTNAME)
#@     return list
#@   else:
#@     return values.dns.vsphere.dnsNames
#@   end
#@ end

#@ def dex_ips():
#@   if globals.infrastructure_provider == "aws":
#@     return []
#@   else:
#@     return values.dns.vsphere.ipAddresses
#@   end
#@ end

#@ dex_name = values.dex.app
#@ dex_namespace = values.dex.namespace
#@ dex_organization = values.dex.organization
#@ dex_self_signed_ca_issuer = dex_name + "-selfsigned-ca-issuer"
#@ dex_ca = dex_name + "-cert"
#@ dex_ca_common_name = values.dex.commonname
#@ dex_secret_name = dex_name + "-cert-tls"
#@ dex_cert_duration = values.dex.certificate.duration or globals.certificate.duration
#@ dex_cert_renew_before = values.dex.certificate.renewBefore or globals.certificate.renewBefore
#@ dex_dns_list = dex_dns()
#@ dex_ipaddress = dex_ips()
#@ dex_isCA = False

--- #@ generate_self_signed_issuer(dex_self_signed_ca_issuer, dex_namespace)
--- #@ certificate_generate_args(get_certificate_with_params, dex_ca, dex_namespace, dex_cert_duration, dex_cert_renew_before, dex_secret_name, [dex_organization], dex_ca_common_name, dex_dns_list, dex_self_signed_ca_issuer, (dex_isCA, dex_ipaddress))